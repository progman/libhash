//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// http://en.wikipedia.org/wiki/SHA-3
// wrapper for SHA3_512 for module of GNU/Linux kernel written by Jeff Garzik <jeff@garzik.org> from https://lwn.net/Articles/518415/
// Alexey Potehin <gnuplanet@gmail.com>, http://www.gnuplanet.ru/doc/cv
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
#include <stdio.h>
#include "sha3_512.hpp"
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// constructor
sha3_512_t::sha3_512_t()
{
	this->psha3_512_item = NULL;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// open operation
void sha3_512_t::open(sha3_512_item_t *psha3_512_item)
{
	sha3_init(&this->ctx, SHA3_512_DIGEST_SIZE);

	this->psha3_512_item = psha3_512_item;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// update hash
void sha3_512_t::update(const void * const p, uint64_t size)
{
	if (this->psha3_512_item == NULL) return;
	sha3_update(&this->ctx, (uint8_t *)p, size);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// close operation
void sha3_512_t::close()
{
	sha3_final(&this->ctx, (uint8_t *)this->psha3_512_item);
	this->psha3_512_item = NULL;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
