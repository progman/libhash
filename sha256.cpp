//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// http://ru.wikipedia.org/wiki/SHA-2
// wrapper for SHA256 from http://ftp.gnu.org/gnu/coreutils/coreutils-8.21.tar.xz
// Alexey Potehin <gnuplanet@gmail.com>, http://www.gnuplanet.ru/doc/cv
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
#include <stdio.h>
#include "sha256.hpp"
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// constructor
sha256_t::sha256_t()
{
	this->psha256_item = NULL;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// open operation
void sha256_t::open(sha256_item_t *psha256_item)
{
	sha256_init_ctx (&this->ctx);

	this->psha256_item = psha256_item;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// update hash
void sha256_t::update(const void * const p, uint64_t size)
{
	if (this->psha256_item == NULL) return;
	sha256_process_bytes (p, size, &this->ctx);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// close operation
void sha256_t::close()
{
	sha256_finish_ctx (&this->ctx, this->psha256_item);
	this->psha256_item = NULL;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
